class Solution {
public List<String> commonChars(String[] A) {
    int n = A.length;
    List<String> res = new LinkedList<>();
    String t = A[0];
    if(n > 1){
        for(int i = 1; i < n; i++){
            t = getCommonString(t, A[i]);
            if(t.length() == 0) return res;
        }   
    }
    char[] arr = t.toCharArray();
    for(char c : arr){
        res.add(String.valueOf(c));
    }
    return res;

}

String getCommonString(String a, String b){
    int[] arr1 = new int[26];
    int[] arr2 = new int[26];
    for(char c : a.toCharArray()){
        arr1[c - 'a']++;
    }
    for(char c : b.toCharArray()){
        arr2[c - 'a']++;
    }
    StringBuilder sb = new StringBuilder();
    for(int i = 0; i < 26; i++){
        if(arr1[i] != 0 && arr2[i] != 0){
            int c = Math.min(arr1[i], arr2[i]);
            for(int j = 0; j < c; j++){
                sb.append((char)(i + 'a'));
            }  
        }
    }
    return sb.toString();
}
}
