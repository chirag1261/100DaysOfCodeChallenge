Consider all the leaves of a binary tree. From left to right order, the values of those leaves form a leaf value sequence._For example, in the given tree above, the leaf value sequence is(6, 7, 4, 9, 8). Two binary trees are considered_leaf-similar if their leaf value sequence is the same.Returntrueif and only if the two given trees with head nodesroot1androot2are leaf-similar.

For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).
Two binary trees are considered leaf-similar if their leaf value sequence is the same.
Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.
Use a stack<TreeNode> to keep dfs path.
dfs(stack) will return next leaf.
Check leaves one by one, until the end or difference.
Only O(logN) space for stack, no extra space for comparation.
O(1) is also possible if we can modify the tree.

Traverse both trees and collect leaf node values. Compare if two trees leaf node values are the same.

 

Example 1:

Input: root1 = [3,5,1,6,2,9,8,null,null,7,4], root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]
Output: true

Example 2:

Input: root1 = [1,2,3], root2 = [1,3,2]
Output: false

 

Constraints:

    The number of nodes in each tree will be in the range [1, 200].
    Both of the given trees will have values in the range [0, 200].
